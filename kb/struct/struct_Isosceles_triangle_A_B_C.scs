sc_node_not_relation -> struct_Triangle_A_B_C;;

struct_Triangle_A_B_C => nrel_main_idtf:
	[Треугольник ABC]
	(*
	<- lang_ru;;
	*);
	[Triangle ABC]
	(*
	<- lang_en;;
	*);;

struct_Triangle_A_B_C => nrel_idtf: [Тр(A; B; C)] (* <- lang_ru;; *);;

struct_Triangle_A_B_C => nrel_idtf: [Треугольник(A; B; C)] (* <- lang_ru;; *);;

struct_Triangle_A_B_C => nrel_idtf: [Треугольник, вершинами которого являются Точка A, Точка B и Точка С] (* <- lang_ru;; *);;

struct_Triangle_A_B_C <- concept_isosceles_triangle;;

sc_node_not_relation -> struct_Geometric_point_A;;
sc_node_not_relation -> struct_Geometric_point_B;;
sc_node_not_relation -> struct_Geometric_point_C;;

struct_Geometric_point_A <- concept_geometric_point;;
struct_Geometric_point_B <- concept_geometric_point;;
struct_Geometric_point_C <- concept_geometric_point;;

struct_Triangle_A_B_C => nrel_vertex: struct_Geometric_point_A;;
struct_Triangle_A_B_C => nrel_vertex: struct_Geometric_point_B;;
struct_Triangle_A_B_C => nrel_vertex: struct_Geometric_point_C;;

sc_node_not_relation -> struct_Segment_A;;
sc_node_not_relation -> struct_Segment_B;;

struct_Segment_A <- concept_segment;;
struct_Segment_B <- concept_segment;;

struct_Triangle_A_B_C  => nrel_lateral_side: struct_Segment_A;;
struct_Triangle_A_B_C  => nrel_lateral_side: struct_Segment_B;;

nrel_congruence -> ... (* -> struct_Segment_A; struct_Segment_B;; *);;
//struct_Segment_A <=> nrel_congruence: struct_Segment_B;;

sc_node_not_relation -> struct_Segment_C;;

struct_Segment_C <- concept_segment;;

struct_Triangle_A_B_C  => nrel_base: struct_Segment_C;;

sc_node_not_relation -> struct_Angle_Alpha;;
sc_node_not_relation -> struct_Angle_Beta;;
sc_node_not_relation -> struct_Angle_Gamma;;

struct_Angle_Alpha <- concept_angle;;
struct_Angle_Beta <- concept_angle;;
struct_Angle_Gamma <- concept_angle;;

struct_Triangle_A_B_C => nrel_internal_angle: struct_Angle_Alpha;;
struct_Triangle_A_B_C => nrel_internal_angle: struct_Angle_Beta;;
struct_Triangle_A_B_C => nrel_internal_angle: struct_Angle_Gamma;;

struct_Angle_Alpha <=> nrel_congruence: struct_Angle_Beta;;

struct_Segment_C => nrel_boundary_point: struct_Geometric_point_A;;
struct_Segment_B => nrel_boundary_point: struct_Geometric_point_A;;

struct_Segment_C => nrel_boundary_point: struct_Geometric_point_B;;
struct_Segment_A => nrel_boundary_point: struct_Geometric_point_B;;

struct_Segment_B => nrel_boundary_point: struct_Geometric_point_C;;
struct_Segment_A => nrel_boundary_point: struct_Geometric_point_C;;

struct_Triangle_A_B_C <- rrel_key_sc_element: 
	...
	(*
		<- sc_illustration;;
		<= nrel_sc_text_translation:
			...
			(*
			-> rrel_example:
				"file://images/triangle_ABC.png";;
			*);;
	*);;

struct_Triangle_A_B_C <- rrel_key_sc_element:
	...
	(*
	=> nrel_main_idtf: [Факт.утв.(Треугольник ABC)] (* <- lang_ru;; *);;
	<- sc_statement;;
	<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Треугольник ABC является равнобедренным.
			Геометрические точки A, B и C являются вершинами Треугольника ABC. Отрезки a, b являются боковыми сторонами, они равны, отрезок c является основанием Треугольника ABC. Углы alpha, beta, gamma являются внутренним углами Треугольника ABC. Углы alpha и beta равны. Точка A является граничной точкой отрезков c, b. Точка B является граничной точкой отрезков c, a.
			Точка C является граничной точкой отрезков b, a.]
			(* <- lang_ru;; *);;
		*);;
	*);;

