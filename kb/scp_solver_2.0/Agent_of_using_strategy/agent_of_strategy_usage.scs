agent_of_strategy_usage
=> nrel_main_idtf:
	[агентная scp-программа применения стратегий решения задач] (* <- lang_ru;; *);
	[agent scp-program of using strategy for solving task] (* <- lang_en;; *);
	<- agent_scp_program;;

scp_program -> agent_of_strategy_usage 
	(*
	-> rrel_params: .agent_of_strategy_usage_params 
		(*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
		*);;

	-> rrel_operators: .agent_of_strategy_usage_operator_set 
		(*
		-> rrel_init: .agent_of_strategy_usage_operator1A 
			(*
		  	<- searchElStr3;;

		  	-> rrel_1: rrel_assign: rrel_scp_var: _temp;;
		  	-> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _quest;;
			
			=> nrel_goto: .agent_of_strategy_usage_operator1B;;
			*);;

		-> .agent_of_strategy_usage_operator1B 
			(*
		  	<- searchElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_finding_proof_task;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

		  	=> nrel_then: .agent_of_strategy_usage_operator1C;;
		  	=> nrel_else: .agent_proc_solve_operator_return;;
			*);;

		-> .agent_of_strategy_usage_operator1C 
			(*
		  	<- searchElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: rrel_false_proof;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _arc1;;

		  	=> nrel_then: .agent_of_strategy_usage_operator1D;;
		  	=> nrel_else: .agent_of_strategy_usage_operator_return;;
			*);;

		-> .agent_of_strategy_usage_operator1D 
			(*
		  	<- searchElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _param;;

		  	=> nrel_then: .agent_of_strategy_usage_operator2A;;
		  	=> nrel_else: .agent_of_strategy_usage_operator_return;;
			*);;

		-> .agent_of_strategy_usage_operator2A 
			(*
		 	<- genEl;;

		 	-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _decomp;;

		 	=> nrel_goto: .agent_of_strategy_usage_operator2B;;
		 	*);;

		-> .agent_of_strategy_usage_operator2B 
			(*
		  	<- searchElStr5;;

		  	-> rrel_1: rrel_assign: rrel_scp_var: _task_node;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _param;;
		  	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_2;;

		  	=> nrel_then: .agent_of_strategy_usage_operator2C1;;
		  	=> nrel_else: .agent_of_strategy_usage_operator_return;;
			*);;

		-> .agent_of_strategy_usage_operator2C1 
			(*
		  	<- searchElStr5;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _task_node;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _info;;
		  	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;

		  	=> nrel_goto: .agent_of_strategy_usage_operator2C2;;
			*);;

		-> .agent_of_strategy_usage_operator2C2 
			(*
		  	<- searchSetStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _info;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _node2;;

		  	-> rrel_set_3: rrel_assign: rrel_scp_var: _condition_graph;;

		  	=> nrel_goto: .agent_of_strategy_usage_operator2C3;;
			*);;

		-> .agent_of_strategy_usage_operator2C3 
			(*
		  	<- searchSetStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _param;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _start_node;;

			-> rrel_set_3: rrel_assign: rrel_scp_var: _const_nodes;;

		  	=> nrel_then: .agent_of_strategy_usage_operator2C3_print;;
		  	=> nrel_else: .agent_of_strategy_usage_operator_wrong_data1;;
			*);;

		-> .agent_of_strategy_usage_operator2C3_print
			(*
		 	<- printEl;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: _const_nodes;;

		 	=> nrel_goto: .agent_of_strategy_usage_operator2C4;;
		 	*);;

		-> .agent_of_strategy_usage_operator2C4 
			(*
		  	<- searchElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _const_nodes;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _example;;

		  	=> nrel_then: .agent_of_strategy_usage_operator2C5;;
		  	=> nrel_else: .agent_of_strategy_usage_operator2C4_erase;;
			*);;

		-> .agent_of_strategy_usage_operator2C4_erase
			(*
		 	<- eraseEl;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _const_nodes;;

		 	=> nrel_goto: .agent_of_strategy_usage_operator_wrong_data2;;
		 	*);;

		-> .agent_of_strategy_usage_operator2C5
			(*
		 	<- eraseEl;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc1;;

		 	=> nrel_goto: .agent_of_strategy_usage_operator2C6;;
		 	*);;

		-> .agent_of_strategy_usage_operator2C6
			(*
		  	<- searchElStr5;;

		  	-> rrel_1: rrel_assign: rrel_scp_var: _tuple1;;
		  	-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _example;;
		  	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  	-> rrel_5: rrel_fixed: rrel_scp_const: nrel_using_constants;;

		  	=> nrel_then: .agent_of_strategy_usage_operator2C4;;
		  	=> nrel_else: .agent_of_strategy_usage_operator2C7;;
			*);;

		-> .agent_of_strategy_usage_operator2C7
			(*
		 	<- eraseEl;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _const_nodes;;

		 	=> nrel_goto: .agent_of_strategy_usage_operator2D;;
		 	*);;

           	-> .agent_of_strategy_usage_operator2D 
			(*
		 	<- genEl;;

		 	-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _used_statements;;

		 	=> nrel_goto: .agent_of_strategy_usage_operator2E;;
		 	*);;

		-> .agent_of_strategy_usage_operator2E 
			(*
		 	<- genEl;;

		 	-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _used_vertexes;;

		 	=> nrel_goto: .agent_of_strategy_usage_operator2F;;
		 	*);;
		 
		-> .agent_of_strategy_usage_operator2F 
			(*
		 	<- genEl;;

		 	-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _tezaurus;;

		 	=> nrel_goto: .agent_of_strategy_usage_operator3A;;
		 	*);;

		-> .agent_of_strategy_usage_operator3A 
			(*
		  	<- call;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_proof_strategy_usage;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_strategy_usage_operator3A_params 
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _param;;
                    		-> rrel_2: rrel_fixed: rrel_scp_var: _example;;
                    		-> rrel_3: rrel_fixed: rrel_scp_var: _used_statements;;
                    		-> rrel_4: rrel_fixed: rrel_scp_var: _used_vertexes;;
				-> rrel_5: rrel_fixed: rrel_scp_var: _decomp;;
				-> rrel_6: rrel_fixed: rrel_scp_var: _tezaurus;;
				-> rrel_7: rrel_fixed: rrel_scp_var: _condition_graph;;
				*);;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _descr2;;

		  	=> nrel_goto: .agent_of_strategy_usage_operator3B;;
			*);;

		-> .agent_of_strategy_usage_operator3B 
			(*
		  	<- waitReturn;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

		  	=> nrel_goto: .agent_of_strategy_usage_operator3C;;
			*);; 

		-> .agent_of_strategy_usage_operator3C 
			(*
                  	<- sys_search;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _param;;
		 	-> rrel_2: rrel_fixed: rrel_scp_const: ...;;
			-> rrel_3: rrel_fixed: rrel_scp_const: ...;;
			-> rrel_4: rrel_assign: rrel_scp_var: _answer_set;;

           		=> nrel_then: .agent_of_strategy_usage_operator3C_erase;;
			=> nrel_else: .agent_of_strategy_usage_operator3D;;
               		*);;

		-> .agent_of_strategy_usage_operator3C_erase 
			(*
		  	<- eraseEl;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _answer_set;;

		  	=> nrel_goto: .agent_of_strategy_usage_operator3D;;  
			*);;

		-> .agent_of_strategy_usage_operator3D
			(*
    		  	<- searchElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_var: _decomp;;
    		  	-> rrel_2: rrel_assign: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_assign: rrel_scp_var: _part_of_decomp;;

			=> nrel_then: .agent_of_strategy_usage_operator4A;;
			=> nrel_else: .agent_of_strategy_usage_operator5A;;
    			*);;

		-> .agent_of_strategy_usage_operator4A 
			(*
                 	<- genElStr5;;

                 	-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
                 	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                 	-> rrel_3: rrel_fixed: rrel_scp_var: _decomp;;
		 	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
                 	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_decomposition;;

                  	=> nrel_goto: .agent_of_strategy_usage_operator4B;;
               		*);;

		/*-> .agent_of_strategy_usage_operator4B
			(*
    		  	<- eraseElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_initiated;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_erase: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_of_strategy_usage_operator4C;;
    			*);;*/

		-> .agent_of_strategy_usage_operator4B
			(*
    		  	<- genElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_successfully;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_of_strategy_usage_operator_return;;
    			*);;

		-> .agent_of_strategy_usage_operator5A
	    		(*
			<- contAssign;;

			-> rrel_1: rrel_assign: rrel_scp_var: _message;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [Knowledge base has not neseccary information for solving this task!];;

			=> nrel_goto: .agent_of_strategy_usage_operator5B;;
			*);; 

		-> .agent_of_strategy_usage_operator5B 
			(*
                 	<- genElStr5;;

                 	-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
                 	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: arc1;;
                 	-> rrel_3: rrel_fixed: rrel_scp_var: _message;;
		 	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: arc2;;
                 	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_message;;

                  	=> nrel_goto: .agent_of_strategy_usage_operator5C;;
               		*);;
		
		-> .agent_of_strategy_usage_operator5C
			(*
    		  	<- genElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_unsuccessfully;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_of_strategy_usage_operator_return;;
    			*);;
			
		 -> .agent_of_strategy_usage_operator_return 
			(*
		  	<- return;;
			*);;
		*);;
	*);; 

