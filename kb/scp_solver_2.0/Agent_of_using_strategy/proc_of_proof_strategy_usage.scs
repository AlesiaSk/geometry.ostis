scp_program -> proc_of_proof_strategy_usage 
	(*
  	-> rrel_params: .proc_of_proof_strategy_usage_params 
		(*
    		-> rrel_1: rrel_in: _parameter;;
    		-> rrel_2: rrel_in: _finish;;
    		-> rrel_3: rrel_in: _used_statements;;
    		-> rrel_4: rrel_in: _used_vertexes;;
    		-> rrel_5: rrel_in: _decomp;;
    		-> rrel_6: rrel_in: _tezaurus;;
		-> rrel_7: rrel_in: _condition_graph;;
    		*);;

	-> rrel_operators: .proc_of_proof_strategy_usage_operator_set
    		(*
    		-> rrel_init: .proc_of_proof_strategy_usage_operator1A
      			(*
      			<- sys_search;;

      			-> rrel_1: rrel_fixed: rrel_scp_var: _parameter;;
		 	-> rrel_2: rrel_fixed: rrel_scp_const: ...;;
			-> rrel_3: rrel_fixed: rrel_scp_const: ...;;
			-> rrel_4: rrel_assign: rrel_scp_var: _answer2;;

      			=> nrel_then: .proc_of_proof_strategy_usage_operator1A_erase1;;
      			=> nrel_else: .proc_of_proof_strategy_usage_operator1B;;
      			*);;

		-> .proc_of_proof_strategy_usage_operator1A_erase1 
			(*
                      	<- eraseEl;;

                        -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _answer2;;
                        
                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator_return;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator1B 
      			(*
    			<- searchElStr3;;

    			-> rrel_1: rrel_fixed: rrel_scp_var: _used_vertexes;;
    			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    			-> rrel_3: rrel_fixed: rrel_scp_var: _finish;;

    			=> nrel_then: .proc_of_proof_strategy_usage_operator_return;;
    			=> nrel_else: .proc_of_proof_strategy_usage_operator1C;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator1C
      			(*
    			<- searchElStr3;;

    			-> rrel_1: rrel_fixed: rrel_scp_var: _condition_graph;;
    			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
    			-> rrel_3: rrel_fixed: rrel_scp_var: _finish;;

    			=> nrel_then: .proc_of_proof_strategy_usage_operator1D;;
    			=> nrel_else: .proc_solve_operator_return;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator1D 
			(*
    			<- genElStr3;;

    			-> rrel_1: rrel_fixed: rrel_scp_var: _used_vertexes;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _finish;;

    		  	=> nrel_goto: .proc_of_proof_strategy_usage_operator1E;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator1E
    			(*                                       
    		  	<- eraseElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_var: _condition_graph;;
    		  	-> rrel_2: rrel_assign: rrel_erase: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _finish;;

    		  	=> nrel_goto: .proc_of_proof_strategy_usage_operator2A;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator2A 
			(*
			<- searchSetStr3;;

			-> rrel_1: rrel_assign: rrel_scp_var: _concept;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _finish;;

                        -> rrel_set_1: rrel_assign: rrel_scp_var: _concepts_set;; 

                	=> nrel_goto: .proc_of_proof_strategy_usage_operator2B;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator2B 
			(*
			<- searchElStr3;;

                 	-> rrel_1: rrel_fixed: rrel_scp_var: _concepts_set;;
               		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                  	-> rrel_3: rrel_assign: rrel_scp_var: _concept;;

                      	=> nrel_then: .proc_of_proof_strategy_usage_operator2C;;
                      	=> nrel_else: .proc_of_proof_strategy_usage_operator_next_nodes;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator2C 
			(*
                      	<- eraseEl;;

                        -> rrel_1: rrel_fixed: rrel_erase: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                        
                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator2D;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator2D 
			(*
                	<- searchElStr5;;

                      	-> rrel_1: rrel_assign: rrel_scp_var: _tuple1;;
                      	-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _concept;;
                      	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
                      	-> rrel_5: rrel_fixed: rrel_scp_const: nrel_using_constants;;

    		  	=> nrel_then: .proc_of_proof_strategy_usage_operator2E;;
    		  	=> nrel_else: .proc_of_proof_strategy_usage_operator2B;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator2E 
			(*
                      	<- genEl;;

                        -> rrel_1: rrel_assign: rrel_node: rrel_const: rrel_scp_var: _solver_statements;;
                        
                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator3A;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator3A
			(*
    		  	<- searchSetStr5;;

    		  	-> rrel_1: rrel_assign: rrel_scp_var: _key_elem;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _concept;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
    		  	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_key_sc_element;;

			-> rrel_set_1: rrel_assign: rrel_scp_var: _key_elem_set;;

			=> nrel_then: .proc_of_proof_strategy_usage_operator3B;;
    			=> nrel_else: .proc_of_proof_strategy_usage_operator2B;;
    			*);;
		
		-> .proc_of_proof_strategy_usage_operator3B 
			(*
			<- searchElStr3;;

                 	-> rrel_1: rrel_fixed: rrel_scp_var: _key_elem_set;;
               		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                  	-> rrel_3: rrel_assign: rrel_scp_var: _key_elem;;

                      	=> nrel_then: .proc_of_proof_strategy_usage_operator3C;;
                      	=> nrel_else: .proc_of_proof_strategy_usage_operator3B_erase;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator3B_erase
			(*
                      	<- eraseEl;;

                        -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _key_elem_set;;
                        
                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator4A;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator3C 
			(*
                      	<- eraseEl;;

                        -> rrel_1: rrel_fixed: rrel_erase: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                        
                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator3D;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator3D
			(*
			<- searchElStr3;;

                 	-> rrel_1: rrel_fixed: rrel_scp_const: sc_statement_for_solver;;
               		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                  	-> rrel_3: rrel_fixed: rrel_scp_var: _key_elem;;

                      	=> nrel_then: .proc_of_proof_strategy_usage_operator3E;;
                      	=> nrel_else: .proc_of_proof_strategy_usage_operator3B;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator3E
			(*
			<- genElStr3;;

                 	-> rrel_1: rrel_fixed: rrel_scp_var: _solver_statements;;
               		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                  	-> rrel_3: rrel_fixed: rrel_scp_var: _key_elem;;

                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator3B;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator4A
			(*
			<- searchElStr3;;

                 	-> rrel_1: rrel_fixed: rrel_scp_var: _solver_statements;;
               		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                  	-> rrel_3: rrel_assign: rrel_scp_var: _use_stat;;

                      	=> nrel_then: .proc_of_proof_strategy_usage_operator4B;;
                      	=> nrel_else: .proc_of_proof_strategy_usage_operator4A_erase;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator4B 
			(*
                      	<- eraseEl;;

                        -> rrel_1: rrel_fixed: rrel_erase: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                        
                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator4C;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator4C
			(*
    		  	<- searchElStr5;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_var: _use_stat;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_assign: rrel_scp_var: _statement;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
    		  	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_main_key_sc_element;;

			=> nrel_then: .proc_of_proof_strategy_usage_operator4D;;
    			=> nrel_else: .proc_of_proof_strategy_usage_operator4A;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator4D
			(*
    		 	<- genEl;;

    		 	-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _quest2;;

    		 	=> nrel_goto: .proc_of_proof_strategy_usage_operator4E;;
    		 	*);;

		-> .proc_of_proof_strategy_usage_operator4E 
			(*
    		  	<- genElStr5;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_var: _quest2;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _finish;;
                      	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
                      	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;
			
    		  	=> nrel_goto: .proc_of_proof_strategy_usage_operator4F;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator4F
			(*
    		  	<- genElStr5;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_var: _quest2;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _statement;;
                      	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                      	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_2;;

    		  	=> nrel_goto: .proc_of_proof_strategy_usage_operator4G;;
    			*);;

          	-> .proc_of_proof_strategy_usage_operator4G 
          		(*
    		  	<- genElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_of_logic_deduction;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;

    		  	=> nrel_goto: .proc_of_proof_strategy_usage_operator4H;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator4H 
			(*
    		  	<- genElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_initiated;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc5;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;

    		  	=> nrel_goto: .proc_of_proof_strategy_usage_operator5A;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator5A
                     	(*                                       
    		  	<- searchElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_unsuccessfully;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;

    		  	=> nrel_then: .proc_of_proof_strategy_usage_operator5B;;
    		  	=> nrel_else: .proc_of_proof_strategy_usage_operator6A;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator6A 
			(*                                       
    		  	<- searchElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_partfully;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;

    		  	=> nrel_then: .proc_of_proof_strategy_usage_operator6B;;
    		  	=> nrel_else: .proc_of_proof_strategy_usage_operator7A;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator7A 
			(*                                       
    		  	<- searchElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_successfully;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;

    		  	=> nrel_then: .proc_of_proof_strategy_usage_operator7B1;;  
    		  	=> nrel_else: .proc_of_proof_strategy_usage_operator8;;  
    			*);;

		-> .proc_of_proof_strategy_usage_operator7B1 
			(*                                       
    		  	<- eraseElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_initiated;;
    		  	-> rrel_2: rrel_assign: rrel_erase: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;

    		  	=> nrel_goto: .proc_of_proof_strategy_usage_operator7B2;;
    			*);;
    			
    		-> .proc_of_proof_strategy_usage_operator7B2 
			(*                                       
    		  	<- eraseElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_successfully;;
    		  	-> rrel_2: rrel_assign: rrel_erase: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;

    		  	=> nrel_goto: .proc_of_proof_strategy_usage_operator7C;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator7C 
			(*                                       
    		  	<- searchElStr5;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_var: _decomp;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_assign: rrel_scp_var: _smth1;;
    		  	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
    		  	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;

    		  	=> nrel_then: .proc_of_proof_strategy_usage_operator7D1;;
    		  	=> nrel_else: .proc_of_proof_strategy_usage_operator7D2;;
    			*);;
    			
		-> .proc_of_proof_strategy_usage_operator7D1 
			(*
                      	<- searchElStr5;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_var: _smth1;;
    		  	-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc2;;
    		  	-> rrel_3: rrel_assign: rrel_scp_var: _smth2;;
                      	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
                      	-> rrel_5: rrel_fixed: rrel_scp_const: nrel_sequence_of_actions;;

    		  	=> nrel_then: .proc_of_proof_strategy_usage_operator7E1;;
    		  	=> nrel_else: .proc_of_proof_strategy_usage_operator7E2;;
                   	*);;
    		
		-> .proc_of_proof_strategy_usage_operator7D2 
			(*                                       
    		  	<- genElStr5;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_var: _decomp;;
    		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;
    		  	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
    		  	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;

    		  	=> nrel_goto: .proc_of_proof_strategy_usage_operator7F3;;
    			*);;
    			
		-> .proc_of_proof_strategy_usage_operator7E1 
			(*
                      	<- searchElStr5;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_var: _smth2;;
    		  	-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc2;;
    		  	-> rrel_3: rrel_assign: rrel_scp_var: _smth1;;
                      	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
                      	-> rrel_5: rrel_fixed: rrel_scp_const: nrel_sequence_of_actions;;

    		  	=> nrel_then: .proc_of_proof_strategy_usage_operator7D1;;
    		  	=> nrel_else: .proc_of_proof_strategy_usage_operator7F1;;
                   	*);;
                   
		-> .proc_of_proof_strategy_usage_operator7E2 
                    	(*
                      	<- genElStr5;;

                      	-> rrel_1: rrel_fixed: rrel_scp_var: _smth1;;
    		  	-> rrel_2: rrel_assign: rrel_common: rrel_const: rrel_scp_var: _arc2;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;
                      	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_const: rrel_scp_var: _arc3;;
                      	-> rrel_5: rrel_fixed: rrel_scp_const: nrel_sequence_of_actions;;

                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator7F2;;
                   	*);;
                   
		-> .proc_of_proof_strategy_usage_operator7F1 
			(*
                      	<- genElStr5;;

                      	-> rrel_1: rrel_fixed: rrel_scp_var: _smth2;;
    		  	-> rrel_2: rrel_assign: rrel_common: rrel_const: rrel_scp_var: _arc2;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;
                      	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_const: rrel_scp_var: _arc3;;
                      	-> rrel_5: rrel_fixed: rrel_scp_const: nrel_sequence_of_actions;;

                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator7F2;;
                   	*);;
                   
		-> .proc_of_proof_strategy_usage_operator7F2 
			(*
                      	<- genElStr3;;

                      	-> rrel_1: rrel_fixed: rrel_scp_var: _decomp;;
                      	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_const: rrel_scp_var: _arc1;;
                      	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;

                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator7F3;;
                   	*);;
                   	               
		-> .proc_of_proof_strategy_usage_operator7F3 
			(*
                      	<- genElStr3;;

                      	-> rrel_1: rrel_fixed: rrel_scp_var: _used_statements;;
                      	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                      	-> rrel_3: rrel_fixed: rrel_scp_var: _statement;;

                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator7F4;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator7F4
			(*
                      	<- sys_search;;

      			-> rrel_1: rrel_fixed: rrel_scp_var: _parameter;;
		 	-> rrel_2: rrel_fixed: rrel_scp_const: ...;;
			-> rrel_3: rrel_fixed: rrel_scp_const: ...;;
			-> rrel_4: rrel_assign: rrel_scp_var: _answer3;;

    		  	=> nrel_then: .proc_of_proof_strategy_usage_operator7F4_erase1;;
    		  	=> nrel_else: .proc_of_proof_strategy_usage_operator7F5;;
                   	*);;

		-> .proc_of_proof_strategy_usage_operator7F4_erase1 
      			(*
    			<- eraseEl;;

    			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _answer3;;

    			=> nrel_goto: .proc_of_proof_strategy_usage_operator7F4_erase2;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator7F4_erase2 
      			(*
    			<- eraseEl;;

    			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _used_statements;;

    			=> nrel_goto: .proc_of_proof_strategy_usage_operator7F4_erase3;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator7F4_erase3 
      			(*
    			<- eraseEl;;

    			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _used_vertexes;;

    			=> nrel_goto: .proc_of_proof_strategy_usage_operator_return;;
    			*);;

		-> .proc_of_proof_strategy_usage_operator7F5 
			(*
                      	<- genElStr3;;

                      	-> rrel_1: rrel_fixed: rrel_scp_var: _tezaurus;;
                      	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
                      	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;

                      	=> nrel_goto: .proc_of_proof_strategy_usage_operator7F6;;
                   	*);; 
                   	
                -> .proc_of_proof_strategy_usage_operator7F6
    			(*                                       
    		  	<- eraseElStr3;;

    		  	-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_successfully;;
    		  	-> rrel_2: rrel_assign: rrel_erase: rrel_pos_const_perm: rrel_scp_var: _arc1;;
    		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest2;;

    		  	=> nrel_goto: .proc_of_proof_strategy_usage_operator4A;;
    			*);;
    		
		-> .proc_of_proof_strategy_usage_operator8
			(*
    		 	<- sys_wait;;
    		 	-> rrel_1: rrel_fixed: rrel_scp_const: sc_event_add_input_arc;;
                     	-> rrel_2: rrel_fixed: rrel_scp_var: _quest2;;

    		 	=> nrel_goto: .proc_of_proof_strategy_usage_operator5A;;
    		 	*);;

		-> .proc_of_proof_strategy_usage_operator_return 
			(*
                      	<- return;;
                   	*);;
                *);;
    	*);;
