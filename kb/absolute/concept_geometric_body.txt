sc_node_not_relation->concept_geometric_body;;


concept_geometric_body=>nrel_main_ru_idtf:[геометрическое тело](*<-lang_ru;;*);;



concept_geometric_body=> nrel_idtf:[Класс геометрических тел](*<-lang_ru;;*);;



concept_geometric_body=> nrel_idtf:[Понятие геометрического тела](*<-lang_ru;;*);;



concept_geometric_body=> nrel_idtf:[Множество всевозможных геометрических тел](*<-lang_ru;;*);;



concept_geometric_body=> nrel_idtf:[Множество знаков всевозможных геометрических тел](*<-lang_ru;;*);;



concept_geometric_body=> nrel_idtf:[geometrical body](*<-lang_en;;*);;



concept_geometric_body <= nrel_strict_inclusion: concept_geometric_figure_of_limited_size;;



concept_geometric_body <= nrel_strict_inclusion: concept_non_planar_figure;;



concept_geometric_body <= nrel_strict_inclusion: concept_uninterrupted_geometric_figure;;



concept_geometric_body => nrel_strict_inclusion: concept_solid_of_revolution;;



concept_geometric_body => nrel_strict_inclusion: concept_polyhedron;;





concept_geometric_body -> subject_domain_of_Euclidean_geometry;;



concept_geometric_body <- rrel_key_sc_element : 
	...
	(*
	<- sc_explanation;;
	<= nrel_sc_text_translation:
		...
		(*
		->rrel_example:
			[Телом называют фигуру в пространстве, обладающую двумя свойствами:
1) у нее есть внутренние точки; любые две из них можно соединить ломанной или отрезком, который целиком проходит внутри фигуры, т.е. состоит из внутренних точек;
2) фигура содержит свою границу. ]
			(*
			<- lang_ru;;
			<= nrel_using_constants:
				{
				concept_geometric_figure;
				concept_plane;
				nrel_internal_point;
				concept_polyline;
				concept_segment;
				nrel_bound;
				concept_surface
				};;
			*);;
		*);;
	*);;


concept_geometric_body <= nrel_statement_of_unique_setting:
	[Утв.(геометрическое тело);;]
	(*
	<- sc_statement;;
	<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Любое геометрическое тело можно однозначно задать, указав замкнутую поверхность, которая будет являться ее границей.]
			(* <- lang_ru;; *);;
		
		*);;
	*);;


concept_geometric_body -> rrel_example : struct_Cube_A_B_C_D_A1_B1_C1_D1;;

concept_geometric_body -> rrel_example : struct_Inclined_cone_K_L;;

concept_geometric_body -> rrel_example : struct_Parallelepiped_A_B_C_D_A1_B1_C1_D1;;

concept_geometric_body -> rrel_example : struct_Pyramid_S_A_B_C_D;;

concept_geometric_body -> rrel_example : struct_Prism_Q_W_E_R_T_Y;;

concept_geometric_body -> rrel_example : struct_Right_Circular_Cone_L_O_R;;
