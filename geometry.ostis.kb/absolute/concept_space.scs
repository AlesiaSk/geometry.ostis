sc_node_not_relation->concept_space;;

concept_space=>nrel_main_idtf:
[пространство]
(*
<-lang_ru;;
*);
[space]
(*
<-lang_en;;
*);;

concept_space=> nrel_idtf:[трехмерное пространство](*<-lang_ru;;*);;

concept_space=> nrel_idtf:[трехмерное евклидово пространство](*<-lang_ru;;*);;

concept_space=> nrel_idtf:[Понятие пространства](*<-lang_ru;;*);;

concept_space=> nrel_idtf:[Евклидово пространство](*<-lang_ru;;*);;

concept_space=> nrel_idtf:[Понятие Евклидова пространства](*<-lang_ru;;*);;

concept_space => nrel_strict_inclusion: concept_half_space;;

concept_space => nrel_strict_inclusion: [метрическое пространство];;

concept_space => nrel_strict_inclusion: [векторное пространство];;

concept_space => nrel_strict_inclusion: [нормированное пространство];;

concept_space => nrel_strict_inclusion: [Гильбертово пространство];;

concept_space => nrel_strict_inclusion: [конечномерное вещественное пространство];;

concept_space <- rrel_key_sc_element: 
        [Поясн.(пространство);;] 
	(*
	<- sc_explanation;; 
	<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Пространство, свойства которого описываются аксиомами евклидовой геометрии.]
			(* 
			<- lang_ru;; 
			*);;
		*);;
	*);;

concept_space <= nrel_statement_of_unique_setting:
	[Утв.(пространство);;]
	(*
	<- sc_statement;;
	<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Любое Евклидово пространство можно задать с помощью трехмерного ортонормированного базиса.]
			(* <- lang_ru;; *);;
		*);;
	*);;

concept_space <= nrel_main_statements:
	
	[Акс.(плоскость; пространство; полупространство; геометрическая точка);;]
	(*
	<- sc_statement;;
	<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Каждая плоскость разбивает пространство на две части(два полупространства) так, что любые две точки одного и того же полупространства лежат по одну сторону от данной плоскости, а любые две точки разных полупространств лежат по разнве стороны от данной плоскости.]
			(* <- lang_ru;; *);;
		*);;
	*);;


concept_space -> subject_domain_of_Euclidean_geometry;;

concept_space <= nrel_analogue : concept_plane;;

concept_space <= nrel_analogue : concept_straight_line;;
