sc_node_not_relation->concept_scalene_triangle;;

concept_scalene_triangle=>nrel_main_ru_idtf:
	[разносторонний треугольник](*<-lang_ru;;*);;

concept_scalene_triangle=> nrel_idtf:[Класс разносторонних треугольников](*<-lang_ru;;*);;

concept_scalene_triangle=> nrel_idtf:[Понятие разностороннего треугольника](*<-lang_ru;;*);;

concept_scalene_triangle=> nrel_idtf:[Множество всевозможных разносторонних треугольников](*<-lang_ru;;*);;

concept_scalene_triangle=> nrel_idtf:[Множество знаков всевозможных разносторонних треугольников](*<-lang_ru;;*);;

concept_scalene_triangle <= nrel_strict_inclusion: concept_triangle;;

concept_scalene_triangle <- rrel_key_sc_element: 
     [Опр.(разносторонний треугольник);;] 
	(*
	<- sc_definition;;   
	<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Множество является разносторонним треугольником тогда и только тогда, когда оно является треугольником и нет его разных сторон, имеющих одну длину.]
			(* 
			<- lang_ru;; 
			<= nrel_using_constants:
				{
				concept_triangle;
				nrel_length;
				nrel_side
				};;
			*);;
		*);;
	*);; 


concept_scalene_triangle <- subject_domain_of_Euclidean_geometry;;

concept_scalene_triangle <= nrel_main_statements: 
     [Утв.(ромб; диагональ*; площадь*);;] 
	(*
	<- sc_statement;;   
	<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[ В любом разностороннем треугольнике для любой его вершины биссектриса, проведённая из неё, лежит между медианой и высотой, проведёнными из той же вершины. ]
			(* 
			<- lang_ru;;
			*);;
		*);;
	*);;

concept_scalene_triangle -> rrel_example : struct_Scalene_triangle_K_L_M;;
