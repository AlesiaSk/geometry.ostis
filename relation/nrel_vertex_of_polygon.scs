sc_node_norole_relation->nrel_vertex_of_polygon;;

nrel_vertex_of_polygon=>nrel_main_ru_idtf:[вершина многоугольника*];;

nrel_vertex_of_polygon=> nrel_idtf:[быть вершиной многоугольника*]
	(*
	<-lang_ru;;
	*);;

nrel_vertex_of_polygon -> relation;;

nrel_vertex_of_polygon -> binary_relation;;

nrel_vertex_of_polygon -> oriented_relation;;

nrel_vertex_of_polygon <= nrel_domain_of_definition : concept_polygon;;

nrel_vertex_of_polygon <= nrel_first_domain: concept_polygon;;

nrel_vertex_of_polygon <= nrel_second_domain: concept_geometric_point;;

nrel_vertex_of_polygon <= nrel_schemes_of_relations:
	{
	rrel_polygon;
	rrel_vertex_of_polygon
	};; 

nrel_vertex_of_polygon <- rrel_key_sc_element: 
     [Опр.(вершина многоугольника*);;] 
	(*
	<- sc_definition;;   //если пояснение, то sc_explanation
	<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Вершиной многоугольника является общая граничная точка двух отрезков, которые являются сторонами многоугольника.]
			(* 
			<- lang_ru;; 
			<= nrel_using_constants:
				{
				concept_polygon;
				concept_geometric_point;
				nrel_side;
				nrel_boundary_point
				};;
			*);;
		*);;
	*);;

nrel_vertex_of_polygon -> subject_domain_of_Euclidean_geometry;;
